<Activity mc:Ignorable="sap sap2010" x:Class="sqReadStatusBar" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="rtnIsErr" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="rtnMess" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410.4,2415.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>sqReadStatusBar_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.GoogleVision.Models</x:String>
      <x:String>Google.Apis.Vision.v1.Data</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.GoogleVision</AssemblyReference>
      <AssemblyReference>Google.Apis.Vision.v1</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="sqReadStatusBar" sap:VirtualizedContainerService.HintSize="1169.6,2310.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="isIcon" />
      <Variable x:TypeArguments="x:Boolean" Name="isIconErr" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1128,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[isIconErr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1128,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[rtnIsErr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1128,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[rtnMess]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1128,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[isIcon]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'saplogon.exe Create'" sap:VirtualizedContainerService.HintSize="1128,1817.6" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="0282e9602eb830d365e7781f3e6c1ddb" Selector="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' /&gt;">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1094.4,1670.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="1052.8,22.4" sap2010:WorkflowViewState.IdRef="Delay_1" />
            <ui:UiElementExists DisplayName="Element Exists 'Afx:02020000:8:00010003...'" Exists="[isIcon]" sap:VirtualizedContainerService.HintSize="1052.8,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target Element="{x:Null}" Id="5beaaaae-daf8-468d-b824-33f34c5611a6" InformativeScreenshot="5b4296f9e4148ed84630c935aa7ddf8e" Selector="&lt;wnd cls='Afx:*' /&gt;" TimeoutMS="2000" WaitForReady="[WaitForReady.COMPLETE]">
                  <ui:Target.ClippingRegion>
                    <ui:Region Rectangle="1, 3, 22, 24" />
                  </ui:Target.ClippingRegion>
                </ui:Target>
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <ui:GetVisibleText FormattedText="{x:Null}" WordsInfo="{x:Null}" ContinueOnError="True" DisplayName="Get Visible Text 'Afx:67210000:8:00010003...'" sap:VirtualizedContainerService.HintSize="1052.8,107.2" sap2010:WorkflowViewState.IdRef="GetVisibleText_1">
              <ui:GetVisibleText.Target>
                <ui:Target Element="{x:Null}" Id="762f4caa-fe26-440b-a422-bbda4d071bec" InformativeScreenshot="63ebc466d127c54ad9d097f8eb6cb746" Selector="&lt;wnd cls='Afx:*' idx='4' /&gt;" TimeoutMS="2000" WaitForReady="COMPLETE">
                  <ui:Target.ClippingRegion>
                    <ui:Region Rectangle="4, 2, 651, 24" />
                  </ui:Target.ClippingRegion>
                </ui:Target>
              </ui:GetVisibleText.Target>
              <ui:GetVisibleText.Text>
                <OutArgument x:TypeArguments="x:String">[rtnMess]</OutArgument>
              </ui:GetVisibleText.Text>
            </ui:GetVisibleText>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1052.8,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;status bar mess : &quot;+rtnMess]" />
            <If Condition="[isIcon]" sap:VirtualizedContainerService.HintSize="1052.8,1118.4" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="908.8,968.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="ui:UiElement" Name="ele" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ImageFound DisplayName="Image Exists 'saplogon.exe Create'" Found="[isIconErr]" sap:VirtualizedContainerService.HintSize="867.2,107.2" sap2010:WorkflowViewState.IdRef="ImageFound_5">
                    <ui:ImageFound.Image>
                      <ui:ImageTarget Image="{x:Null}" Accuracy="0.9" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAABkAAAAWCAYAAAA1vze2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABWSURBVEhL7ZFBCgAgCAT9/9t6jR8wCrwsaCQVgQ7sSZg5SMwst5ckEgU9y0gj2toAPaGIYt3QU5GJdUNP8oi3AXr+jSjWDT2JfhIBPW7k1CqytQcRlg5/c0Fkeq32RQAAAABJRU5ErkJggg==" />
                    </ui:ImageFound.Image>
                    <ui:ImageFound.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="5db68ad9-6874-4a02-9d37-957f85b44394" TimeoutMS="1000">
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:ImageFound.Target>
                  </ui:ImageFound>
                  <If Condition="[isIconErr]" sap:VirtualizedContainerService.HintSize="867.2,728.8" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[rtnIsErr]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="find icon waning" sap:VirtualizedContainerService.HintSize="560.8,579.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="ui:UiElement" Name="ele" />
                          <Variable x:TypeArguments="x:Boolean" Name="isIconErr" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ImageFound DisplayName="Image Exists 'saplogon.exe Create'" Found="[isIconErr]" sap:VirtualizedContainerService.HintSize="519.2,107.2" sap2010:WorkflowViewState.IdRef="ImageFound_4">
                          <ui:ImageFound.Image>
                            <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAABUAAAAVCAYAAACpF6WWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhP7cxBCoAwDETR3Mnje6tcoDKFQJpOEgU3gou/cGqeqOp4ux/lDz4RWWL/+FoUyDiPpQ4uUQZaFZyiEcQ32+gtHcOxAdm+3W8DObTj6m0x/MccPo9WtegcCYwt27f7OFgRYCgD5y0brYj4MhCVKGJwBaIWRUB87B/fLfRpX0F1XDMnxdsKpzkhAAAAAElFTkSuQmCC" />
                          </ui:ImageFound.Image>
                          <ui:ImageFound.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="c5d985c4-c11d-47cb-a88c-6c8c3ad7c750" TimeoutMS="1000" WaitForReady="COMPLETE" />
                          </ui:ImageFound.Target>
                        </ui:ImageFound>
                        <If Condition="[isIconErr]" sap:VirtualizedContainerService.HintSize="519.2,339.2" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,189.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="isPopUp" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" DisplayName="Type Into" sap:VirtualizedContainerService.HintSize="333.6,96.8" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="%[k(enter)]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="41824a12-ada4-401b-9d70-aca95c4b786a">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
    </ui:WindowScope>
  </Sequence>
</Activity>